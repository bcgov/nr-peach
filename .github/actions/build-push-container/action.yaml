name: Build & Push Container
description: Builds a container from a Dockerfile and pushes to registry

inputs:
  context:
    description: Effective Working Directory
    required: true
    default: './'
  image_name:
    description: Image Name
    required: true
  github_username:
    description: Github Container Registry Username
    required: true
  github_token:
    description: Github Container Registry Authorization Token
    required: true

runs:
  using: composite
  steps:
    - name: Checkout repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
    - name: Parse Input Values
      shell: bash
      run: |
        echo "GH_USERNAME=$(tr '[:upper:]' '[:lower:]' <<< '${{ inputs.github_username }}')" >> $GITHUB_ENV
    - name: Login to Github Container Registry
      uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
      with:
        registry: ghcr.io
        username: ${{ env.GH_USERNAME }}
        password: ${{ inputs.github_token }}
    - name: Prepare Container Metadata tags
      id: meta
      uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5
      with:
        images: |
          ghcr.io/${{ env.GH_USERNAME }}/${{ inputs.image_name }}
        # Always updates the 'latest' tag
        flavor: |
          latest=true
        # Creates tags based off of branch names and semver tags
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=sha
    - name: Build and Push to Container Registry
      id: builder
      uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6
      with:
        context: ${{ inputs.context }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        annotations: ${{ steps.meta.outputs.annotations }}
    - name: Inspect Docker Image
      shell: bash
      run: |
        docker image inspect ghcr.io/${{ env.GH_USERNAME }}/${{ inputs.image_name }}:latest
    - name: Attest
      uses: actions/attest@v2.3.0
      id: attest
      with:
        subject-name: ghcr.io/${{ env.GH_USERNAME }}/${{ inputs.image_name }}
        subject-digest: ${{ steps.builder.outputs.digest }}
        predicate-type: 'https://in-toto.io/attestation/release/v0.1'
        predicate: '{"purl":"pkg:oci/${{ env.GH_USERNAME }}/${{ inputs.image_name }}"}'
