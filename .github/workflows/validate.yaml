---
name: Validate

on:
  push:
    branches:
      - '**'
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  preflight:
    name: Preflight Checks
    runs-on: ubuntu-latest
    outputs:
      HAS_SONAR_SECRETS: ${{ steps.check-secrets.outputs.HAS_SONAR_SECRETS }}
      PR_EXISTS: ${{ steps.pr-check.outputs.PR_EXISTS }}
    timeout-minutes: 10
    permissions:
      contents: read
    steps:
      - name: Short circuit if open PR exists for this branch (on push)
        id: pr-check
        if: github.event_name == 'push'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          sleep 20
          prs=$(gh pr list --head "${{ github.ref_name }}" --state open --repo "${{ github.repository }}" --json number --jq '.[].number')
          if [ -n "$prs" ]; then
            echo "PR_EXISTS=true" >> $GITHUB_OUTPUT
          else
            echo "PR_EXISTS=false" >> $GITHUB_OUTPUT
          fi
      - name: Check SonarCloud Secrets
        id: check-secrets
        if: steps.pr-check.outputs.PR_EXISTS != 'true'
        run: |
          echo "HAS_SONAR_SECRETS=${{ secrets.SONAR_TOKEN != '' }}" >> $GITHUB_OUTPUT

  lint-infra:
    name: Lint Infra
    needs: preflight
    if: needs.preflight.outputs.PR_EXISTS != 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5.0.0
      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v5.0.0
      - name: Cache TFLint plugins
        uses: actions/cache@v4.2.4
        id: cache-tflint
        with:
          path: ~/.tflint.d/plugins
          key: ${{ runner.os }}-tflint-${{ env.cache-name }}-${{ hashFiles('**/.tflint.hcl') }}
          restore-keys: |
            ${{ runner.os }}-tflint-${{ env.cache-name }}-
            ${{ runner.os }}-tflint-
      - name: Init TFLint
        env: # https://github.com/terraform-linters/tflint/blob/master/docs/user-guide/plugins.md#avoiding-rate-limiting
          GITHUB_TOKEN: ${{ github.token }}
        run: tflint --init
      - name: Run TFLint
        run: tflint --recursive -f compact

  lint-app:
    name: Lint App
    needs: preflight
    if: needs.preflight.outputs.PR_EXISTS != 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5.0.0
      - name: Setup Node.js
        uses: actions/setup-node@v4.4.0
        with:
          node-version: 22
      - name: Cache Node modules
        uses: actions/cache@v4.2.4
        id: cache-app
        env:
          cache-name: cache-node-modules
        with:
          path: ${{ github.workspace }}/node_modules
          key: ${{ runner.os }}-app-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-app-${{ env.cache-name }}-
            ${{ runner.os }}-app-
      - name: Install dependencies
        if: steps.cache-app.outputs.cache-hit != 'true'
        run: npm ci
      - name: Lint
        run: npm run lint

  test-app:
    name: Test App
    needs: preflight
    if: needs.preflight.outputs.PR_EXISTS != 'true'
    runs-on: ubuntu-latest
    outputs:
      HAS_SONAR_SECRETS: ${{ steps.check-secrets.outputs.HAS_SONAR_SECRETS }}
    timeout-minutes: 10
    permissions:
      contents: read
      pull-requests: write
      statuses: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5.0.0
      - name: Setup Node.js
        uses: actions/setup-node@v4.4.0
        with:
          node-version: 22
      - name: Cache Node modules
        uses: actions/cache@v4.2.4
        id: cache-app
        env:
          cache-name: cache-node-modules
        with:
          path: ${{ github.workspace }}/node_modules
          key: ${{ runner.os }}-app-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-app-${{ env.cache-name }}-
            ${{ runner.os }}-app-
      - name: Install dependencies
        if: steps.cache-app.outputs.cache-hit != 'true'
        run: npm ci
      - name: Test
        env:
          CI: true
        run: npm run test
      - name: Save Coverage Results
        uses: actions/upload-artifact@v4.6.2
        with:
          name: coverage-app
          path: ${{ github.workspace }}/coverage
          retention-days: 1
      - name: Monitor Coverage
        if: github.event_name == 'pull_request' && ! github.event.pull_request.head.repo.fork
        uses: slavcodev/coverage-monitor-action@398c4cbbb710e549a8407fdef96ae8b9454d0463 # 1.10.0
        with:
          comment_mode: update
          comment_footer: false
          comment_context: Coverage Report
          coverage_path: coverage/clover.xml
          github_token: ${{ secrets.GITHUB_TOKEN }}
          threshold_alert: 50
          threshold_warning: 80

  coverage:
    name: Publish Coverage
    needs: test-app
    if: needs.preflight.outputs.HAS_SONAR_SECRETS == 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5.0.0
        with:
          fetch-depth: 0
      - name: Cache Node modules
        uses: actions/cache@v4.2.4
        id: cache-app
        env:
          cache-name: cache-node-modules
        with:
          path: ${{ github.workspace }}/node_modules
          key: ${{ runner.os }}-app-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-app-${{ env.cache-name }}-
            ${{ runner.os }}-app-
            ${{ runner.os }}-
      - name: Restore Coverage Results
        uses: actions/download-artifact@v5.0.0
        with:
          name: coverage-app
          path: ${{ github.workspace }}/coverage
      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@8c71dc039c2dd71d3821e89a2b58ecc7fee6ced9 # v5.3.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
