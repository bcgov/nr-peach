---
name: Tests

on:
  - push
  - pull_request

jobs:
  test-app:
    name: Unit Tests
    runs-on: ubuntu-latest
    # defaults:
    #   run:
    #     working-directory: src
    # outputs:
    #   HAS_CC_SECRETS: ${{ steps.check-secrets.outputs.HAS_CC_SECRETS }}
    timeout-minutes: 10
    strategy:
      fail-fast: true
      matrix:
        node-version:
          - '20.x'
          - '22.x'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      # - name: Check CodeClimate Secrets
      #   id: check-secrets
      #   run: |
      #     echo "HAS_CC_SECRETS=${{ secrets.CC_TEST_REPORTER_ID != '' }}" >> $GITHUB_OUTPUT
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node modules
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
        id: cache-app
        env:
          cache-name: cache-node-modules
        with:
          path: ${{ github.workspace }}/node_modules
          key: ${{ runner.os }}-app-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-app-${{ env.cache-name }}-
            ${{ runner.os }}-app-
            ${{ runner.os }}-
      - name: Install dependencies
        if: steps.cache-app.outputs.cache-hit != 'true'
        run: npm ci
      - name: Lint
        if: "matrix.node-version == '22.x'"
        run: npm run lint
      - name: Test (Legacy)
        if: "matrix.node-version == '20.x'"
        run: npm run test
        env:
          CI: true
      - name: Test
        if: "matrix.node-version == '22.x'"
        run: npm run test:cov
        env:
          CI: true
      # - name: Save Coverage Results
      #   if: matrix.node-version == '22.x'
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: coverage-app
      #     path: ${{ github.workspace }}/coverage
      #     retention-days: 1
      - name: Monitor Coverage
        if: "matrix.node-version == '22.x' && ! github.event.pull_request.head.repo.fork"
        uses: slavcodev/coverage-monitor-action@398c4cbbb710e549a8407fdef96ae8b9454d0463 # v1
        with:
          comment_mode: update
          comment_footer: false
          comment_context: Coverage Report
          coverage_path: coverage/clover.xml
          github_token: ${{ secrets.GITHUB_TOKEN }}
          threshold_alert: 50
          threshold_warning: 80

  # test-coverage:
  #   name: Publish to Code Climate
  #   needs: test-app
  #   if: needs.test-app.outputs.HAS_CC_SECRETS == 'true'
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 10
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v4
  #     - name: Restore Coverage Results
  #       uses: actions/download-artifact@v4
  #     - name: Publish code coverage
  #       uses: paambaati/codeclimate-action@v9
  #       env:
  #         CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
  #       with:
  #         coverageLocations: |
  #           ${{ github.workspace }}/**/lcov.info:lcov
  #         prefix: ${{ github.workplace }}
