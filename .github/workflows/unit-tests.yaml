---
name: Tests

on:
  push:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

jobs:
  test-app:
    name: Unit Tests
    runs-on: ubuntu-latest
    outputs:
      HAS_SONAR_SECRETS: ${{ steps.check-secrets.outputs.HAS_SONAR_SECRETS }}
    timeout-minutes: 10
    permissions:
      contents: read
      pull-requests: write
    strategy:
      fail-fast: true
      matrix:
        node-version:
          - '20.x'
          - '22.x'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Check SonarCloud Secrets
        id: check-secrets
        run: |
          echo "HAS_SONAR_SECRETS=${{ secrets.SONAR_TOKEN != '' }}" >> $GITHUB_OUTPUT
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node modules
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
        id: cache-app
        env:
          cache-name: cache-node-modules
        with:
          path: ${{ github.workspace }}/node_modules
          key: ${{ runner.os }}-app-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-app-${{ env.cache-name }}-
            ${{ runner.os }}-app-
            ${{ runner.os }}-
      - name: Install dependencies
        if: steps.cache-app.outputs.cache-hit != 'true'
        run: npm ci
      - name: Lint
        if: "matrix.node-version == '22.x'"
        run: npm run lint
      - name: Test
        run: npm run test
        env:
          CI: true
      - name: Save Coverage Results
        if: matrix.node-version == '22.x'
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: coverage-app
          path: ${{ github.workspace }}/coverage
          retention-days: 1
      - name: Monitor Coverage
        if: "matrix.node-version == '22.x' && ! github.event.pull_request.head.repo.fork"
        uses: slavcodev/coverage-monitor-action@398c4cbbb710e549a8407fdef96ae8b9454d0463 # v1
        with:
          comment_mode: update
          comment_footer: false
          comment_context: Coverage Report
          coverage_path: coverage/clover.xml
          github_token: ${{ secrets.GITHUB_TOKEN }}
          threshold_alert: 50
          threshold_warning: 80

  test-coverage:
    name: Publish to SonarCloud
    needs: test-app
    if: needs.test-app.outputs.HAS_SONAR_SECRETS == 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
    steps:
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0
      - name: Cache node modules
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
        id: cache-app
        env:
          cache-name: cache-node-modules
        with:
          path: ${{ github.workspace }}/node_modules
          key: ${{ runner.os }}-app-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-app-${{ env.cache-name }}-
            ${{ runner.os }}-app-
            ${{ runner.os }}-
      - name: Restore Coverage Results
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
        with:
          name: coverage-app
          path: ${{ github.workspace }}/coverage
      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@2500896589ef8f7247069a56136f8dc177c27ccf # v5.2.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
