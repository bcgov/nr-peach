name: .Core Deployer

on:
  workflow_call:
    inputs:
      command:
        description: 'The terragrunt command to run'
        required: true
        type: string
        default: apply
      environment:
        description: 'The name of the environment to deploy to'
        required: true
        type: string
        default: dev
      tag:
        description: 'The tag of the containers to deploy'
        required: false
        type: string
        default: latest

env:
  AZURE_REGION: Canada Central
  TF_LOG: ERROR

permissions:
  id-token: write # This is required for requesting the JWT
  contents: write # This is required for actions/checkout

jobs:
  infra:
    environment: ${{ inputs.environment }}
    name: Terraform ${{inputs.command}} ${{ inputs.environment }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Azure CLI Login
        uses: azure/login@v2.3.0
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
      - name: Image Tags
        id: image-tags
        run: |
          API_IMAGE="ghcr.io/${{ github.repository }}:${{ inputs.tag }}"
          echo "api-image=$API_IMAGE" >> $GITHUB_OUTPUT
      - name: Terraform Init
        working-directory: infra/core
        run: |
          terraform init -upgrade \
            -backend-config="resource_group_name=${{ secrets.VNET_RESOURCE_GROUP_NAME }}" \
            -backend-config="storage_account_name=tfstatenrpeach${{ inputs.environment }}" \
            -backend-config="subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
            -backend-config="tenant_id=${{ secrets.AZURE_TENANT_ID }}" \
            -backend-config="client_id=${{ secrets.AZURE_CLIENT_ID }}" \
            -backend-config="use_oidc=true"
